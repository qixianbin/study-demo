建造者模式：
    定义：将一个复杂对象的构建与表示分离，使得同样的创建过程可以创建不同的表示。（将产品和创建过程解耦）
    结构：
        抽象建造者类：规定复杂对象的哪些部分的创建
        具体建造者类：实现抽象建造者类
        产品类：要创建的复杂对象
        指挥者类：调用建造者来创建复杂对象的各个部分，控制建造顺序
    优点：
        封装变化，一般产品类和建造这类是比较稳定不变化的；
        客户端不必知道产品内部组成结构和细节，将产品和客户端解耦
        易扩展，有新的需求创建新的建造者即可，符合开闭原则
    缺点：
        产品一般具有较多的共同点，如果产品差异过多，不适用
    使用场景：
        1、对象复杂，由多个组件组成,各组件变化复杂，但构建顺序是稳定的
        2、创建对象的算法独立于对象的组成部分及他们的装配方式，即构建过程和最终形式是独立的
    个人感悟：
        建议抽象建造者采用抽象类的形式，这样可以将产品与抽象建造者采用聚合的关系，具体的建造者与产品没有直接依赖关系，在修改产品类的时候只需要针对抽象建造者即可，对后期扩展修改的代码量少
    与工厂模式区别：
        1、工厂模式关心整体，不关注创建的过程和细节，建造者模式注重创建的过程和细节，建造者模式将创建过程分为多个方法