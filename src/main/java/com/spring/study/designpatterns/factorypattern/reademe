工厂模式有三种：
    简单（静态）工厂模式：
        产品的创建交给一个工厂，增加加产品的话需要修改工厂类，违反开闭原则
    工厂方法模式：
        定义一个创建对象的抽象方法，由子类决定要实例化的类，将对象的实例化推迟到子类中。
    抽象工厂模式：
        抽象工厂模式是工厂方法模式的升级版本，他用来创建一组相关或者相互依赖的对象。
        它与工厂方法模式的区别就在于，工厂方法模式针对的是一个产品等级结构；而抽象工厂模式则是针对的多个产品等级结构。
        在编程中，通常一个产品结构，表现为一个接口或者抽象类，也就是说，工厂方法模式提供的所有产品都是衍生自同一个接口或抽象类，而抽象工厂模式所提供的产品则是衍生自不同的接口或抽象类。
        在抽象工厂模式中，有一个产品族的概念：所谓的产品族，是指位于不同产品等级结构中功能相关联的产品组成的家族。抽象工厂模式所提供的一系列产品就组成一个产品族；而工厂方法提供的一系列产品称为一个等级结构。
        比如小米工厂只生产小米手机，小米电脑，三星工厂只生产三星手机，三星电脑
        抽象工厂模式可生产违背了单一职责原则